### liutf ###

.newi : new instance
	CLASS                    →  $expr$ $var:suggestVariableName()$ = new $expr$();

.ifEquals : StringUtils equals
	java.lang.String     	 →  if (StringUtils.equals("$END$",$expr$)){\
	                                                         \
	                                                       }

.ifNotEmpty : Collection or Map isNotEmpty
	java.util.Collection     →  if (CollectionUtils.isNotEmpty($expr$)){\
	                                                         $END$\
	                                                       }
	java.util.Map            →  if (MapUtils.isNotEmpty($expr$)){\
	                                                         $END$\                                                         
	                                                       }	                                                       

.ifIsEmpty : Collection or Map isEmpty
	java.util.Collection     →  if (CollectionUtils.isEmpty($expr$)){\
	                                                         $END$\
	                                                       }
	java.util.Map     		 →  if (MapUtils.isEmpty($expr$)){\
	                                                    $END$\		
	                                             }	                                                       



.ifIsNotBlank : StringUtils isNotBlank
	java.lang.String     	 →  if (StringUtils.isNotBlank($expr$)){\
	                                                         $END$\
	                                                       }
.ifIsBlank : StringUtils isBlank
	java.lang.String     	 →  if (StringUtils.isBlank($expr$)){\
	                                                         $END$\
	                                                       }

.ifIsNumeric : NumberUtils isNumeric
	java.lang.String     	 →  if (NumberUtils.isCreatable($expr$)){\
	                                                         $END$\
	                                                       }

.checkNotBlank : Precondition checkArgumentNotBlank
	java.lang.String     	 →  Precondition.checkIsNotBlank("$expr$",$expr$);$END$

.checkNotNull : Preconditions.checkNotNull
	java.lang.Object     	 →  Preconditions.checkNotNull($expr$);$END$

.checkArgument : Preconditions.checkArgument
	java.lang.Object     	 →  Preconditions.checkArgument($expr$ $END$);

.checkArgumentIsNumeric : Preconditions.checkArgument-isNumeric
	java.lang.Object     	 →  Preconditions.checkArgument(NumberUtils.isCreatable($expr$), "$expr$ 必须为数字");$END$

.toJSON : Faston.toJSON
	java.lang.Object     	 →  JSON.toJSON($expr$);$END$

.toJSONString : Faston.toJSONString
	java.lang.Object     	 →  JSON.toJSONString($expr$);$END$	

.parseObject : Faston.parseObject
	java.lang.String     	 →  JSON.parseObject($expr$, $END$);
	
.error : log.error
	java.lang.Object     	 →  log.error("$END$ 错误信息：{}",$expr$);
	
.info : log.info
	java.lang.Object     	 →  log.info("$expr$:{}",$expr$);
	
