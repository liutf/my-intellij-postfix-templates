### liutf ###

.newi : new instance
	CLASS                    →  $expr$ $var:suggestVariableName()$ = new $expr$()

.ifEquals : StringUtils equals
	java.lang.String     	 →  if (StringUtils.equals("$END$",$expr$)){\
	                                                         \
	                                                       }

.ifNotEmpty : CollectionUtils isNotEmpty
	java.util.Collection     →  if (CollectionUtils.isNotEmpty($expr$)){\
	                                                         $END$\
	                                                       }

.ifIsEmpty : CollectionUtils isEmpty
	java.util.Collection     →  if (CollectionUtils.isEmpty($expr$)){\
	                                                         $END$\
	                                                       }

.ifIsNotBlank : StringUtils isNotBlank
	java.lang.String     	 →  if (StringUtils.isNotBlank($expr$)){\
	                                                         $END$\
	                                                       }
.ifIsBlank : StringUtils isBlank
	java.lang.String     	 →  if (StringUtils.isBlank($expr$)){\
	                                                         $END$\
	                                                       }

.ifIsNumeric : StringUtils isNumeric
	java.lang.String     	 →  if (StringUtils.isNumeric($expr$)){\
	                                                         $END$\
	                                                       }

.checkNotBlank : Precondition checkArgumentNotBlank
	java.lang.String     	 →  Precondition.checkIsNotBlank("$expr$",$expr$)$END$

.checkNotNull : Preconditions.checkNotNull
	java.lang.Object     	 →  Preconditions.checkNotNull($expr$)$END$

.checkArgument : Preconditions.checkArgument
	java.lang.Object     	 →  Preconditions.checkArgument($expr$ $END$)

.checkArgumentIsNumeric : Preconditions.checkArgument-isNumeric
	java.lang.Object     	 →  Preconditions.checkArgument(StringUtils.isNumeric($expr$), "$expr$ 必须为数字")$END$


	
.error : log.error
	java.lang.Object     	 →  log.error("$END$ 错误信息：{}",$expr$)
	
.info : log.info
	java.lang.Object     	 →  log.info("$expr$:{}",$expr$)
	
