### liutf ###

.newi : new instance
	CLASS                    →  $expr$ $var:suggestVariableName()$ = new $expr$();

.equals : StringUtils equals
	java.lang.String     	 →  if (StringUtils.equals("$END$",$expr$)){\
	                                                         \
	                                                       }

.notEmpty : CollectionUtils isNotEmpty
	java.util.Collection     →  if (CollectionUtils.isNotEmpty($expr$)){\
	                                                         $END$\
	                                                       }

.isEmpty : CollectionUtils isEmpty
	java.util.Collection     →  if (CollectionUtils.isEmpty($expr$)){\
	                                                         $END$\
	                                                       }

.isNotBlank : StringUtils isNotBlank
	java.lang.String     	 →  if (StringUtils.isNotBlank($expr$)){\
	                                                         $END$\
	                                                       }
.isBlank : StringUtils isBlank
	java.lang.String     	 →  if (StringUtils.isBlank($expr$)){\
	                                                         $END$\
	                                                       }

.isNumeric : StringUtils isNumeric
	java.lang.String     	 →  if (StringUtils.isNumeric($expr$)){\
	                                                         $END$\
	                                                       }

.checkNotBlank : Precondition checkArgumentNotBlank
	java.lang.String     	 →  Precondition.checkIsNotBlank("$expr$",$expr$);

.checkNotNull : Preconditions.checkNotNull
	java.lang.Object     	 →  Preconditions.checkNotNull($expr$);$END$

.checkArgument : Preconditions.checkArgument
	java.lang.Object     	 →  Preconditions.checkArgument($expr$ $END$);

	
.error : log.error
	java.lang.Object     	 →  log.error("$END$  . $expr$ :{}",$expr$);
	
.info : log.info
	java.lang.Object     	 →  log.info("$expr$:{}",$expr$);
	
